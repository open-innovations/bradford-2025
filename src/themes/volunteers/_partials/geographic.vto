{{>
    const wardSignUps = wards
        .map(ward => ({ ...ward, count: 0, ...people.by_geo_osward.find(w => w.code == ward.code) }))
        .map(d => ({
            ...d,
            count: d.count <= 5 && d.count > 0 ? 5 : d.count,
            countLabel: d.count <= 5 && d.count > 0 ? '5 or fewer' : d.count.toString()
        }) )
    const postcodeSignUps = geojson.postcodes.features.map(x => x.properties.name)
        .map(code => ({ code, count: 0, ...people.by_geo_postcode_area.find(w => w.code == code) }))
        .map(d => ({
            ...d,
            count: d.count <= 5 && d.count > 0 ? 5 : d.count,
            countLabel: d.count <= 5 && d.count > 0 ? '5 or fewer' : d.count.toString()
        }) )
    const total_volunteers = people.by_geo_TOTAL.find(x => x.type === 'TOTAL' && x.code === 'TOTAL').count
    const unknown_address = people.by_geo_TOTAL.find(x => x.type === 'TOTAL' && x.code === 'UNKNOWN').count
    const known_address = total_volunteers - unknown_address;
}}

<section class="grid regular">
<div class="full-width">
<h2>Geographic distribution of volunteers</h2>
<p>
We want the volunteering team to be representative of the whole region.
As our volunteers progress through the onboarding process, they provide
we can use to map where they come from.
We're still in the process of capturing and validating this information
for all volunteers.
At the moment, have validated address details for
<strong>{{ Math.round(100 * known_address / total_volunteers) }}%</strong>
({{ known_address }}) of our volunteers.
</p>
</div>

<div class="block uncoloured">
    <h3>Local Authorities</h3>
    <p>
        The table below shows the volunteer counts by
        local authority where the count is above 5.
    </p>
    
    <div class="block centred">
    <table style="margin-inline:auto;">
    <thead>
        <tr>
            <th>Local Authority</th>
            <th>Count of volunteers</th>
        </tr>
    </thead>
    <tbody>
    {{ for la of people.by_geo_oslaua.filter(x => x.type === 'oslaua' && x.count > 5).sort((a, b) => b.count - a.count) }}
        <tr><td>{{ codes.la[la.code]?.name || la.code }}</td><td>{{ la.count }}</td></tr>
    {{ /for }}
    </tbody>
    </table>
    </div>
    <p>
        The subsequent maps show the geographic distribution of volunteers across Bradford,
        either by ward or by postcode district.
    </p>
</div>

<div class="block">
    <h3>Ward hexmap</h3>
    {{ comp.oi.map.hex_cartogram({
        config: {
            hexjson: hexes.bd_2024,
            data: wardSignUps,
            scale: scales.yellow,
            matchKey: 'code',
            value: 'count',
            label: 'short_code',
            tooltip: '<b>{{ n }} ({{ short_code }})</b>:\n{{ countLabel }} volunteers'
        }
    }) }}
    <p>
        The <q>hexmap</q> shows the number of volunteers living in each Bradford
        ward where we have valdiaetd addresses.
    </p>
</div>
<div class="block">
    <h3>Ward geographic map</h3>
    {{# TODO Sort out the tooltip for this #}}
    {{ comp.oi.map.svg({ 
        config: {
            geojson: { key: "WD24CD", data: geojson.bd_wards },
            data: wardSignUps,
            bounds: bounds.bradford,
            value: 'count', 
            scale: scales.yellow,
            key: 'code',
            label: 'short_code',
            columns: [
                { name: 'tooltip', template: '<b>{{ name }}</b>\n{{ countLabel }} volunteers' },
            ],
            tooltip: 'tooltip',
    } }) }}
    <p>
        The geographic map shows the equivalent data as the hexmap,
        but in a geographic layout.
    </p>
</div>

<div class="block">
    <h3>Postcode district geographic map</h3>
    {{ comp.oi.map.svg({ 
        config: {
            geojson: { key: "name", data: geojson.postcodes },
            data: postcodeSignUps,
            bounds: bounds.bradford,
            value: 'count', 
            scale: scales.yellow,
            key: 'code',
            label: 'short_code',
            columns: [
                { name: 'tooltip', template: '<b>{{ code }}</b>\n{{ countLabel }} volunteers' },
            ],
            tooltip: 'tooltip',
    } }) }}
    <p>
        The map displays the number of volunteers by Bradford postcode district.
    </p>
</div>
</section>