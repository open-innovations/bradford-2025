{{>
	const includedCategories = {
		...events.by_category,
		Exhibition: null,
		Festival: null,
		Online: null,
	}

	const eventsCount = Object.values(includedCategories).reduce((a, c) => a + c, 0)
}}

{{ comp dashboard.Cell {
	title: metrics.events_in_person.title,
	flash: metrics.events_in_person.flash || flash,
	classes: 'events'
} }}
	{{ comp.BigNumber({
		number: eventsCount,
		suffix: '',
	}) }}
	{{ comp.dashboard.Footer({
	}) }}
	{{ comp Controls }}
		{{ comp Popover { id: 'events_in_person' }}}
			<h2>{{metrics.events_in_person.title}}</h2>
			<p>
				Total count of in-person {{ comp glossary.Ref { term: 'Event' } }}events{{ /comp }}
				(including {{ comp glossary.Ref { term: 'Performance' } }}performances{{ /comp }}) held during the timescale covered by the dashboard.
			</p>
			<p>
				Events are included in this count unless they are categorised as either an
                <b>Exhibition</b>, a <b>Festival</b> or an <b>Online/Digital</b> event.
			</p>


			{{ comp.dashboard.InfoBoxDescription({
				"metrics": metrics,
				"collection": title,
				"file": "events_in_person"
			}) |> md |> vto(page.data) }}

			{{# TODO Review project breakdown #}}
			{{> const rows = [{
					"class":"c-pink",
					"title": "Total In-person events",
					"value": eventsCount,
					"description": "Events running between {{ comp.Date({start:timestamp.start,end:timestamp.end}) }} recorded in the <strong>Bradford 2025 Project Hub</strong>."
				}];
                for(project of Object.entries(events.by_project).sort((a,b) => b[1].count - a[1].count)){
					if(project[1].category === 'In-person'){
						rows.push({
							"title": project[0],
							"value": project[1].count,
						});
					}
				}
			}}

			{{ comp.dashboard.InfoBoxTable({
				"cms": metrics.events_in_person,
				"columns": [
					{ "key": "title", "label": "Project", "header": true },
					{ "key": "value", "label": "Events", "class":"centred" },
					{ "key": "venue", "label": "Venues" },
					{ "key": "description", "label": "Description" }
				],
				"header": {
					"class": "c-yellow"
				},
				"rows":rows
			}) |> vto(page.data) }}

		{{ /comp }}
	{{ /comp }}
{{ /comp }}