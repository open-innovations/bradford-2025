---
draft: true
title: Volunteers
description: |
    Volunteers are at the heart of Bradford 2025.
    Explore data related to the volunteering programme.
layout: templates/page.vto

scales:
    yellow: 'hsl(46, 50%, 90%) 0%, #e4ae00 100%'
    greenfade: "#1c1b1f 0%, #45d10a 100%"
    yellowfade: "#1c1b1f 0%, #e4ae00 100%"
undefinedSeries:
    title: Suppressed values
    colour: '#777'
keyMap:
    1. Monitoring & Evaluation cumulative: Signed up
    2. Sign Up to Induction cumulative: Induction booked
    3. Fully Inducted Volunteers cumulative: Active volunteers
checkpointDetails:
    Signed up: 
        note: People who have signed up as potential volunteers
    Induction booked:
        note: People who have passed initial screening and have an induction booked #}}
    Active volunteers:
        note: People who have completed the volunteer sign-up process
---

{{# TODO move this to a pipeline #}}
{{ set total = geo_summary.find(x => x.type === 'TOTAL').count }}
{{ set summary = Object.entries(checkpoints_monthly[checkpoints_monthly.length - 1])
    .filter(([k,v]) => k.includes('cumulative'))
    .reduce((result, [k, v]) => ({ ...result, [keyMap[k] || k]: v }), {})
}}
{{>
    const wardSignUps = geojson.bd_wards.features.map(x => x.properties.WD24CD)
        .map(code => ({ code, count: 0, ...geo_summary.find(w => w.code == code) }))
        .map(d => ({
            ...d,
            count: d.count <= 5 && d.count > 0 ? 5 : d.count,
            countLabel: d.count <= 5 && d.count > 0 ? 'fewer than 6' : d.count.toString()
        }) )
    const postcodeSignUps = geojson.postcodes.features.map(x => x.properties.name)
        .map(code => ({ code, count: 0, ...geo_summary.find(w => w.code == code) }))
        .map(d => ({
            ...d,
            count: d.count <= 5 && d.count > 0 ? 5 : d.count,
            countLabel: d.count <= 5 && d.count > 0 ? 'fewer than 6' : d.count.toString()
        }) )
}}

<section>
<h2>Summary</h2>
<p>
    This section summarises the key measures related to volunteers.
    You can explore the details by scrolling down.
</p>
{{ set summaryDashboard = Object.entries(checkpointDetails)
    .map(([title, details]) => ({
        title,
        value: summary[title] || null,
        ...details
    }))
}}

{{ comp.oi.dashboard({
    config: {
        data: summaryDashboard,
        title: "title",
        value: "value",
        note: "note",
        width: "30%",
        panels: [
            { name: "Signed up", colour: "pink" },
            { name: "Induction booked", colour: "yellow" },
            { name: "Active volunteers", colour: "green" },
        ]
    }
}) }}
</section>

<hr>

<section class="grid regular">
<h2 class="full-width">Geographic distribution of volunteers</h2>

<div class="full-width">
    <p>
        The maps show the geographic distribution of volunteers across Bradford, either by ward
        or by postcode. In either case, the postcode provided by the volunteer at sign-up
        has been used to identify the geography.
    </p>
</div>

<h3 class="full-width">Volunteers by Bradford Council ward</h3>
<aside class="full-width">
    <p>
        The <q>hexmap</q> shows the wards in the Bradford Council local authority area.
        Hexmaps are useful as they present all elements as similarly sized,
        and can avoid providing a skewed view of the data.
    </p>
    <p>
        The equivalent geographic map is shown following the hexmap for comparison.
    </p>
    <p>
        Hover over the hexes to see the values and details of names.
    </p>
</aside>
<div class="block">
    {{ comp.oi.map.hex_cartogram({
        config: {
            hexjson: hexes.bd_2024,
            data: wardSignUps,
            scale: scales.yellow,
            matchKey: 'code',
            value: 'count',
            label: '{{ n | slice(0,3) }}',
            tooltip: '{{ n }}: <strong>{{ countLabel }} volunteers</strong>'
        }
    }) }}
</div>
<div class="block">
    {{# TODO Sort out the tooltip for this #}}
    {{ comp.oi.map.svg({ 
        config: {
            geojson: { key: "WD24CD", data: geojson.bd_wards },
            data: wardSignUps,
            bounds: {
                lat: { min: 53.72, max: 53.97 },
                lon: { min: -2.07, max: -1.63 }
            },
            value: 'count', 
            scale: scales.yellow,
            key: 'code',
            label: '{{ code }}',
            columns: [
                { name: 'tooltip', template: '{{ code }}: <strong>{{ countLabel }}</strong> volunteers' },
            ],
            tooltip: 'tooltip',
    } }) }}
</div>

<h3 class="full-width">Volunteers by Bradford Postcode</h3>
<div>
    <p>
        There is strong evidence that some Bradford residents associate themselves
        very closely with their postcode. The map displays the number of volunteers
        by Bradford postcode. 
    </p>

    <p class="block c-yellow">
        Please note, the postcode map does not cover the entire Bradford Council area.
        There are some postcodes (e.g. LS29) not on the map, and other BD postcodes
        which are not in Bradford MDC. This map will be refined to cover these
        cases.
    </p>
</div>

    {{ comp.oi.map.svg({ 
        config: {
            geojson: { key: "name", data: geojson.postcodes },
            data: postcodeSignUps,
            bounds: {
                lat: { min: 53.72, max: 53.97 },
                lon: { min: -2.07, max: -1.63}
            },
            value: 'count', 
            scale: scales.yellow,
            key: 'code',
            label: '{{ code }}',
            columns: [
                { name: 'tooltip', template: '{{ code }}: <strong>{{ countLabel }}</strong> volunteers' },
            ],
            tooltip: 'tooltip',
    } }) }}

</section>

<hr>

{{ include './_partials/checkpoints.vto' }}

<hr>

{{ include './_partials/demographics.vto' }}

<hr>

{{ include "./_partials/shifts.vto" }}
