{{ comp dashboard.Cell {
	title: metrics.audiences_total.title,
	flash: flash.audiences_total,
	classes: 'audiences'
} }}
	{{ comp.BigNumber({
		number: audience.total || 0,
	}) }}
	{{ comp.dashboard.Footer({
		dateRange: timestamp
	}) }}
	{{ comp Controls }}
		{{ if navLink }}{{ comp.controlActions.InPageLink({ link: navLink }) }}{{ /if }}
		{{ comp Popover { id: 'audiences_total' } }}
			<h2>{{ metrics.audiences_total.title }}</h2>
			<p>
				The size of the {{ comp glossary.Ref { slug: 'audience' } }}audience{{ /comp }} for all events held between
				between {{ comp.Date({start:timestamp.start, end:timestamp.end}) }}.
			</p>
			{{ comp.dashboard.InfoBoxDescription({
				"metrics": metrics,
				"collection": title,
				"file": "audiences_total"
			}) |> vto(page.data) }}

			{{ include './calculations.md' |> md }}

			{{>
				const rows = Object.entries(audience.by_category)
					.sort((a, b) => b[1] - a[1])
					.map(([key, value]) => ({ "title":key, "value": value.toLocaleString() }));
			}}
			{{ comp.dashboard.InfoBoxTable({
				"cms": metrics.audiences_total,
				"columns": [
					{ "name": "title", "label": "Category", "header": true },
					{ "name": "value", "label": "Audience", "class": "right" },
					{ "name": "description", "label": "Description", key: 'description' }
				],
				"head": {
					"class": "c-green"
				},
				"data": rows
			}) |> md |> vto(page.data) }}
		{{ /comp }}
	{{ /comp }}
{{ /comp }}
