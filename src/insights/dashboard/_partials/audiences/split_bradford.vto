{{>
	// TODO Update this
	const audienceSplit = audience.ticketed.sold.bradford / audience.ticketed.sold.total;

	const excludedCategories = [
		'Digital'
	];

	const audienceCount = Object.entries(audience.by_category)
		.filter(c => !excludedCategories.includes(c[0]))
		.reduce((a, c) => a + c[1], 0)

	const bradfordAudiences = audienceCount * audienceSplit;
	console.log({ audienceCount, audienceSplit, bradfordAudiences });
}}
{{ comp dashboard.Cell {
	title: metrics.audiences_split_bradford.title,
	flash: flash.audiences_split_bradford,
	classes: 'audiences',
	progress: 100 * (audienceCount * audienceSplit) / targets.audiences_split_bradford,
	progresstarget: targets.audiences_split_bradford,
} }}
	{{ comp.BigNumber({
		number: bradfordAudiences.toLocaleString(undefined, { maximumFractionDigits: 0 }),
	}) }}
        {{ comp.dashboard.Footer({
		upTo: metrics.audiences_split_bradford.upTo
	}) }}
	{{ comp Controls }}
		{{ comp Popover { id: 'audiences_split_bradford' } }}
			<h2>{{ metrics.audiences_split_bradford.title }}</h2>
			{{ comp.dashboard.InfoBoxDescription({
				"metrics": metrics,
				"collection": title,
				"file": "audiences_split_bradford"
			}) |> md |> vto(page.data) }}

			{{# TODO Turn this into a table, perhaps? #}}
			<p>
				{{ audienceSplit.toLocaleString(undefined, { maximumFractionDigits: 1, style: 'percent' }) }} of ticket were bought by residents of Bradford.
			</p>
		{{ /comp }}
	{{ /comp }}
{{ /comp }}
